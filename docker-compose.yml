version: '3.8'

services:

  database:
    container_name: db_container
    image: postgres:alpine
    environment:
      POSTGRES_PASSWORD: $TDP_DB_PASS
      POSTGRES_USER: $TDP_DB_USER
      POSTGRES_DB: $TDP_DB_SCHEMA
    ports:
      - ${TDP_DB_PORT}:$TDP_DB_PORT
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - web

  backend:
    depends_on:
      - database
    container_name: tdp_backend_container
    build:
      context: ./backend
      dockerfile: Dockerfile
    expose:
      - "8080"
    environment:
      SPRING_PROFILES_ACTIVE: dev
      TDP_DB_HOST: db_container
      TDP_DB_PORT: $TDP_DB_PORT
      TDP_DB_USER: $TDP_DB_USER
      TDP_DB_PASS: $TDP_DB_PASS
      TDP_DB_SCHEMA: $TDP_DB_SCHEMA
      JWT_SECRET: $JWT_SECRET
    networks:
      - web

  caddy:
    image: caddy:latest
    container_name: caddy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - backend
    networks:
      - web

#  frontend:
#    depends_on:
#      - backend
#    container_name: tdp_frontend_container
#    build:
#      context: ./frontend
#      dockerfile: Dockerfile
#    ports:
#      - "3000:80"

volumes:
  db_data:
  caddy_data:
  caddy_config:

networks:
  web:
    driver: bridge